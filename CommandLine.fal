/*
   CommandLine - Falcon IRC Bot command line otpions
   FILE: CommandLine.fal

   -------------------------------------------------------------------
   Author: Paul Nema
   Begin: 13-DEC-2009

   -------------------------------------------------------------------
   (C) Copyright 2009: the falbot developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

export CommandLine

object CommandLine from CmdlineParser

    _host = "irc.freenode.net"
    _channel = "#falcon"
    _port = 6667
    _log = './'
    _nick = 'FalconBot'
    _eval = false
    _verbose = false
    _filter = []
    _web_path = '/home/pnema/dev/falcon/falcon-website/live/data'
    _core_path = '/web/falcon.com/html/core'
    _module_path = '/web/falcon.com/html/feathers'
    
    function onOption( option )
        switch option
        case "n", "nick"
            self.expectValue()
            
        case "l", "log"
            self.expectValue()
            
        case "h", "host", "p", "port", "c", "channel", "f", "filter", "web", "core", "module"
            self.expectValue()
            
        case "?", "help"
            > self.usage()
            exit(0)
            
        case "e", "eval"
            self._eval = true
            
        case "v", "verbose"
            self._verbose = true
            
        default
            > self.usage()
            exit(1)
        end
    end

    function onValue( option, value)
        switch option
        case "l", "log"
            self._log = value
	    if self._log[ self._log.len() - 1 ] != '/': self._log += '/'
            
        case "n", "nick"
            self._nick = value
            
        case "h", "host"
            self._host = value
            
        case "p", "port"
            self._port = value
            
        case "c", "channel"
            self._channel = value
            
        case "f", "filter"
            arrayAdd(self._filter, value)
            
        case "web"
            self._web_path = value
            
        case "core"
            self._core_path = value
            
        case "module"
            self._module_path = value
            
        default
            self.unrecongnized( option )
        end
    end
    
    function onSwitchOff( sw )
        switch sw
        case "e", "eval"
            self._eval = false
            
        default
            self.unrecongnized( sw )
        end
    end

    function usage()
        return( "falconlogger.fal [-h --host host] [-c --channel channel] [-p port]\n" +
            "\t[-f -filter nick] [-l --log logFilePath] [-e|--eval] [-v] [-?|--help]\n" +
            "\t[--web /path/to/website/ftd's ] [--core /path/to/core/html's ]" +
            "\t[--module /path/to/module/html's ]" +
            "\t[-n|--nick name]" +
            "\n\thost default = " + self._host +
            "\n\tchannel default = " + self._channel +
            "\n\tnick default = " + self._nick +
            "\n\tport default = " + self._port +
            "\n\tpath: default = " + self.web_path +
            "\n\tcore: default = " + self.core_path +
            "\n\tmodule: default = " + self.module_path +
            "\n\tfilter: each '-f nick' combo will be filtered" +
            "\n\t-? usage " +
            "\n\t-v (Verbose) default = " + self._verbose +
            "\n\t-l default = " + self._log +
            "\n\t\tNOTE: file name is set at: Log-FalconBot-CCYY-MM-DD.txt" +
            "\n\t-e (Compiler) default = " + self._eval )
    end
    
    function parse()
        // call base class parse
        self.CmdlineParser.parse()
        
        if not self._log and not self._eval
            > "Both log and eval flags are false\n\n", self.usage()
        end
    end
    
    function __get_channel()
        return self._channel
    end
        
    function __get_port()
        return self._port
    end
    
    function __get_host()
        return self._host
    end
    
    function __get_log()
        return self._log
    end
    function __set_log( val )
        self._log = val
    end
    
    function __get_eval()
        return self._eval
    end

    function __get_nick()
        return self._nick
    end
    function __set_nick( val )
        self._nick = val
    end
    
    function __get_filter()
        return self._filter
    end
        
    function __get_verbose()
        return self._verbose
    end
    
    function __get_web_path()
        return self._web_path
    end
    
    function __get_core_path()
        return self._core_path
    end
    
    function __get_module_path()
        return self._module_path
    end
end
