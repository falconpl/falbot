/*
 *  falconlogger.fal
 *
 *  Chat logger and Falcon code evaluation.  This server joins a channel
 *      and passively logs all traffic.  The server will also looks for specific
 *      user supplied tags within the chat traffic and take appropriate actions
 *      based upon the submitted tag.  See showHelp() in module ManageUsers.fal
 *      for supported tags and their meaning.
 *
 *  Author History:
 *      1. Initial implementation: Jeremy Cowgar, (jeremy_c)
 *      2. Updated by: Paul Davey, (TechnoMancer|OmniMancer)
 *      3. Updated by: Paul Nema, (pnema)
 *
 *  New functionality added by Paul Nema - 22-NOV-2009:
 *  1. Command Line directives - see CommandLine.usage()
 *  2. Capability to capture submitted code on the designated channel, 
 *      compile code and send the output back to the channel
 *  3. Create only one log file per day.  Multiple starts will append logging
 *      to the existing chat log.
 *
 *  Paul Nema
 */

// Falcon Modules
load regex

// FalconLogger Modules
load IrcClient
load ManageUsers
load CommandLine


CommandLine.parse()  // get the command line options

logger = IrcClient("irc.freenode.net", 6667,
    "FalconLog", "Falcon Logger and Script Eval", "FalconLog", nil, CommandLine)

if CommandLine.eval:  user_manager = ManageUsers( logger, CommandLine )

subscribe("IrcPrivateMessage",
        { message =>
            if message.channel == CommandLine.channel
                time = CurrentTime().toString("%R")
                message.client.log(@"($time) $message.nick: $message.said")
            end
        }
    )


logger.connect() // connect to the irc server
logger.join( CommandLine.channel ) // join a channel

time = CurrentTime()

// loop forever
// if log == true create a new log file when the day changes
while true
    if CommandLine.log
        newTime = CurrentTime()
        if newTime.day > time.day
            if CommandLine.verbose: > "Creating a new log file"
            logger.generateLogFile()
            end
        time = newTime
    end

    sleep(5)
end
